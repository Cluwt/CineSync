/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package br.com.cinesync.project.Views;

import br.com.cinesync.project.swingx.CurvesPanel;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.util.List;
import javax.swing.SwingUtilities;
import javax.swing.SwingWorker;

/**
 *
 * @author Csarp
 */
public class SplashScreenView extends javax.swing.JFrame {

    /**
     * Creates new form SplashScreenView
     */
    public SplashScreenView() {
        initComponents();
        
        // Início do JAR do curves:
        curvesPanel1.start();
        
        // Alteração no tamanho da resolução:
        setSize(1058, 649);
        
        // Carregamento do processo:
        carregarProcesso();
        
        // Fechar a janela depois do processo ser carregado:
        dispose();
        
        
              
        // Centralizando a janela na tela
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        int centerX = (int) ((screenSize.getWidth() - getWidth()) / 2);
        int centerY = (int) ((screenSize.getHeight() - getHeight()) / 2);
        setLocation(centerX, centerY);
        
    }
    
    
   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        curvesPanel1 = new br.com.cinesync.project.swingx.CurvesPanel();
        jLabel1 = new javax.swing.JLabel();
        labelSplash = new javax.swing.JLabel();
        progressoSplash = new br.com.cinesync.project.Utils.ProgressBarCustom();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        curvesPanel1.setLayout(null);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/cinesync/project/Resources/Gray_and_White_Modern_Cinema_Logo-removebg-preview.png"))); // NOI18N
        curvesPanel1.add(jLabel1);
        jLabel1.setBounds(270, 40, 500, 500);

        labelSplash.setText("Carregando..");
        curvesPanel1.add(labelSplash);
        labelSplash.setBounds(740, 540, 280, 16);
        curvesPanel1.add(progressoSplash);
        progressoSplash.setBounds(740, 560, 280, 15);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(curvesPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1058, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(curvesPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 649, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
     private void carregarProcesso() {
    Thread thread = new Thread(new Runnable() {
        @Override
        public void run() {
            String[] mensagens = {
                "Carregando informações dos usuários...",
                "Carregando informações dos funcionários...",
                "Carregando informações da bilheteria...",
                "Carregando informações das salas VIP...",
                "Carregando informações das sessões...",
                "Carregando informações dos combos promocionais...",
                "Carregando informações da bomboniere...",
                "Carregando informações dos totens de autoatendimento...",
                "Carregando informações dos programas de fidelidade...",
                "Carregamento concluído!"
            };
            
            for (int i = 0; i < mensagens.length; i++) {
                try {
                    // Simula um processo de carregamento
                    Thread.sleep(2000);
                } catch (InterruptedException e) {
                    e.printStackTrace();
                }
                final String mensagem = mensagens[i]; // Captura a mensagem atual
                final int progress;
                if (i == mensagens.length - 1) {
                    progress = 90; // Define 90% para a última mensagem
                } else {
                    progress = (i + 1) * (100 / mensagens.length); // Calcula o progresso normal
                }
                SwingUtilities.invokeLater(new Runnable() {
                    @Override
                    public void run() {
                        // Atualiza a label e a barra de progresso na UI thread
                        updateLabel(mensagem);
                        progressoSplash.setValue(progress);
                    }
                });
            }
            // Após o término do carregamento, abre a janela de login
            SwingUtilities.invokeLater(new Runnable() {
                @Override
                public void run() {
                    abrirLoginView();
                }
            });
        }
    });
    thread.start();
}

    private void updateLabel(String mensagem) {
        labelSplash.setText(mensagem);
    }

    private void abrirLoginView() {
        LoginView loginView = new LoginView();
        loginView.setVisible(true);
        dispose();
    }

    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SplashScreenView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SplashScreenView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SplashScreenView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SplashScreenView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SplashScreenView().setVisible(true);
                
                
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private br.com.cinesync.project.swingx.CurvesPanel curvesPanel1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel labelSplash;
    private br.com.cinesync.project.Utils.ProgressBarCustom progressoSplash;
    // End of variables declaration//GEN-END:variables
}
